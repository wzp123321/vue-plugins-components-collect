export interface energyDataType {
  treeSort: number;
  code: string;
  childEnergyCode: energyDataType[];
  coalRatio: number;
  totalEnergyFlag: string;
  treeLeaf: string;
  co2Ratio: number;
  parentName: string;
  unit: string;
  parentCode: string;
  name: string;
  moneyRatio: number;
  energyFlag: string;
  standardPoints: string;
  environmentFlag: string;
  id: number;
}
export interface INodeTreeOld {
  key: string;
  title: string;
  isLeaf: boolean;
  disabled: boolean;
  parentId: string[];
  children: INodeTreeOld[];
  unit: string;
}

export interface treeType {
  selectValue: number;
  data: treeTypeData[];
}
export interface treeTypeData {
  value: number;
  label: string;
}

export interface TypeTree {
  area: number;
  treeSort: number;
  treeLeaf: number;
  treeType: string;
  parentIds: string;
  childTree: TypeTree[];
  nodeType: string;
  parentId: number;
  hospitalCode: string;
  nodeTypeText: string;
  treeLevel: number;
  treeName: string;
  peopleNumber: number;
  treeNames: string;
  id: number;
  autoGenerated: number;
  airConditionedArea: number;
  treeTypeText: string;
}
export interface typeTreeOld {
  key: number;
  title: string;
  isLeaf: boolean;
  disabled: boolean;
  parentId: string[];
  children: typeTreeOld[];
}

export interface deviceParam {
  energyCode: string;
  treeId: number;
}
export interface deviceDataList {
  concentratorId: number;
  concentratorName: string;
  deviceId: number;
  deviceName: string;
  standardPointCode: string;
  pointNumber: number;
  pointName: string;
  pointId: number;
}
export interface selectDdeviceType {
  objectId: number;
  deviceId: number;
  pointNumber: number;
  submit: boolean;
  objectName: string;
  objectType: string;
  standardPointCode: string;
}

export interface quickTime {
  id: number;
  name: string;
}

export interface verificationParamType {
  dateType: number;
  startDate: string;
  endDate: string;
  energyCode: string;
  entryType: string;
  keyWords: string;
  objectId: string;
  orders: any[];
  searchCount: boolean;
  pageNum: number;
  pageSize: number;
  objectType?: string;
}

export interface errorListParam {
  SysNo: number;
  FileName: string;
  ImportSuccess: boolean;
  ErrorMsg: erorrListDeils[];
}

export interface erorrListDeils {
  position: string;
  detail: string;
}

export interface formQuickTime {
  id: number;
  name: string;
}

export interface getObjectEnery {
  energyCode: string;
  InputName: string;
  objectId: number;
  objectName: string;
  objectType: string;
  pointNumber?: number;
  standardPointCode?: string;
  endDate: string;
  startDate: string;
  dateType: string;
  energyType: string;
  allocationFlag?: string;
  allocationRule?: string;
}

export interface manualEntryParam {
  allocationFlag?: string;
  allocationRule?: string;
  dateType: string;
  endDate: string;
  energyCode: string;
  entryType: string;
  entryValue: number;
  objectId: number;
  objectName: string;
  objectType: string;
  pointNumber?: number;
  standardPointCode?: string;
  startDate: string;
}

export interface pagesType {
  pageNum: number;
  pageSize: number;
  total: number;
  pages: number;
}
export interface tableListType {
  entryType: string;
  entryTime: string;
  dataTime: string;
  allocationDetail: allocationDetailType;
  objectName: string;
  id: number;
  entryTypeName: string;
  entryValue: number;
  energyName: string;
  objectId: number;
  energyCode: string;
  energyUnit: string;
}
export interface allocationDetailType {
  allocationPeriod: string;
  dateRange: string;
  allocationName: string;
  allocationDetails: any[];
}

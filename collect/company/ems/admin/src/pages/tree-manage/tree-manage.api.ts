export enum TM_ELEAFTYPES {
  是叶子节点 = '1',
  不是叶子节点 = '0',
}

export enum TM_NODE_TYPES {
  全部 = '0',
  医院 = '1',
  院区 = '2',
  楼栋 = '3',
  楼层 = '4',
  科室 = '5',
}

export enum TM_TREE_TYPE {
  区域树 = '1',
  业态树 = '2',
  支路树 = '3',
  科室树 = '4',
}

export const TM_DefaultProps = {
  label: 'treeName',
  children: 'childTree',
};

export const TM_NodeKey = 'id';

/**
 * 顶部查询
 */
export interface TM_ISearchTreeParams {
  authorityTreeIds?: string[];
  keyword: string;
  nodeType?: string;
  parentId?: number | null;
  treeLevel?: number;
  treeType: string;
}

export interface TM_ITreeManageVO {
  area: string;
  autoGenerated: string;
  childTree: TM_ITreeManageVO[];
  fatherNodeType: string;
  hospitalCode: string;
  hospitalName: string;
  id: string;
  lockFlag: string;
  nodeType: string;
  nodeTypeText: string;
  parentId: string;
  parentIds: string;
  treeLeaf: string;
  treeLevel: number;
  treeName: string;
  treeNames: string;
  treeSort: string;
  treeType: string;
  treeTypeText: string;

  lazyNode?: boolean;
  departmentId?: string;
  departmentName?: string;
  effectiveEndTime?: string;
  effectiveStartTime?: string;
}

export interface TM_ITreeManageDetail {
  area: string;
  autoGenerated: string;
  childTree: TM_ITreeManageVO[];
  fatherNodeType: string;
  hospitalCode: string[];
  hospitalName: string;
  id: string;
  lockFlag: string;
  nodeType: string;
  nodeTypeText: string;
  parentId: string;
  parentIds: string;
  treeLeaf: number;
  treeLevel: number;
  treeName: string;
  treeNames: string;
  treeSort: string;
  treeType: string;
  treeTypeText: string;

  departmentId?: string[];
  departmentName?: string;
  effectiveEndTime?: Date | null;
  effectiveStartTime?: Date | null;
}

export interface TM_ITreeManageForm {
  hospitalCode: string[];
  hospitalName: string;
  id: string;
  lockFlag: string;
  nodeType: string;
  nodeTypeText: string;
  parentId: string;
  treeLeaf: string;
  treeLevel: number;
  treeName: string;
  treeSort: string;
  treeType: string;
  treeTypeText: string;

  departmentId?: string[];
  departmentName?: string;
  effectiveStartTime?: Date | null;
  effectiveEndTime?: Date | null;
}

export interface TM_FormItem {
  treeName: string;
  nodeType: string;
  treeSort: string;
}

export interface TM_AddNode {
  parentId: string;
  treeLeaf?: string;
  treeType: string;
  nodeList: TM_FormItem[];
  relDelete?: boolean;
}

// 空间中心
export interface TM_ILocationVO {
  area: number;
  children: TM_ILocationVO[];
  code: string;
  createTime: string;
  funcProp: number;
  id: number;
  levelCode: string;
  mobile: string;
  name: string;
  nodeName: string;
  parentId: number;
  parentIds: string;
  picUrl: string;
  qrcodeStatus: string;
  selectable: true;
  sort: number;
  status: string;
  updateTime: string;
}

export interface TM_ICodeName {
  name: string;
  code: string;
}

// 新增入参
export interface TM_ITreeAddParams {
  departmentId?: string;
  departmentName?: string;
  effectiveEndTime?: string;
  effectiveStartTime?: string;
  relDelete?: boolean;

  hospitalCode: string;
  nodeType: string;
  parentId: string;
  parentIds?: string;
  treeLeaf?: number;
  treeLevel?: number;
  treeName: string;
  treeNames?: string;
  treeSort: string;
  treeType: string;
}

// 编辑入参
export interface TM_ITreeEditorParams extends TM_ITreeAddParams {
  id?: string;
}

// 科室关联信息
export interface TM_IDepartmentHistoryVO {
  departmentId: string;
  departmentName: string;
  effectiveEndTime: string;
  effectiveStartTime: string;
  id: string;
  treeId: string;
}
